---
import Page from "../../layouts/Page.astro";
import { Header } from "../../components/header";
import { Footer } from "../../components/footer";
import { getCollection } from "astro:content";
import { Image } from "astro:assets";

import ImageIcon from "~icons/material-symbols-rounded/image:outlined&opticalSize=48";
import type { CollectionEntry } from "astro:content";

import dayjs from "dayjs";
import utc from "dayjs/plugin/utc";
import { getBlogCollection } from "../../schemas/blog";


dayjs.extend(utc);

const posts = (await getBlogCollection())
  .sort(
    (a, b) => b.data.createdAt.valueOf() - a.data.createdAt.valueOf(),
  );
---

<Page>
  <Header />
  <main data-pagefind-ignore>
    <article>
      <ul class="posts">
        {
          posts.map(({ id, slug, data: post }) => {
            const postUrl = `/blog/${slug}/`;
            const [author, ...authors] = post.authors;

            const date = dayjs(post.editedAt ?? post.createdAt)
              .utc()
              .format("DD MMM YYYY")
              .toUpperCase();

            const anchorId = `post-${id.split(".")[0]}`;

            return (
              <li>
                <div class="post">
                  <a
                    class="card"
                    href={postUrl}>
                        {
                          post.cover
                            ? <Image class="cover image" src={post.cover.src} alt={post.cover.alt} />
                            : <div class="cover placeholder"><ImageIcon width={48} height={48} /></div>
                          }
                      <div class="content">
                        <span class="date">{date}</span>
                        <h3 id={anchorId} class="title">{post.title}</h3>
                        {post.description && <p class="description">{post.description}</p>}
                      </div>
                  </a>
                  <div class="authors">
                    <span class="by">by</span>
                    <a class="author" href={`/blog/tags/author/${author.id}/`}>
                        {
                          author.avatar
                            && <Image
                                  class="avatar"
                                  src={author.avatar.src}
                                  alt={author.avatar.alt ?? ""} />
                        }
                        {author.name}
                    </a>
                    {
                      authors.length > 0
                        && <a class="author more" href={postUrl}>+{authors.length} more</a>
                    }
                  </div>
                </div>
              </li>
            );
          })
        }
      </ul>
    </article>
  </main>
  <Footer />
</Page>

<style>
  main {
    min-height: 70vh;
  }
  article {
    width: 100%;
    max-width: 840px;

    margin: 64px auto 24px auto;
    padding: 0 24px;
  }
  li {
    display: contents;
  }

  .posts {
    list-style: none;

    display: grid;
    place-items: center;
    place-content: center;
    grid-template-columns: 1fr;
    gap: 40px 24px;
  }

  @media only screen and (min-width: 600px) {
    .posts {
      grid-template-columns: 1fr 1fr;
    }
  }

  .post {
    width: 100%;
    height: 100%;
    grid-column: span 1;

    display: flex;
    flex-direction: column;
    align-items: flex-start;
    justify-content: center;
    gap: 8px;
  }

  .card {
    position: relative;
    -webkit-tap-highlight-color: transparent;
    width: 100%;
    height: 100%;
    text-decoration: none;
    color: var(--color-on-surface);

    display: flex;
    flex-direction: column;
    align-items: center;

    background-color: var(--color-surface);

    border-radius: 28px;
    outline: none;

    transition-property: background-color, box-shadow;
    transition-duration: 105ms;
    transition-timing-function: linear;

    @media (hover: hover) {
      &:hover {
        /* background-color: var(--color-secondary-container); */
        background-color: var(--color-surface-container-low);
        box-shadow:
          0px 1px 3px 0px rgba(0, 0, 0, 0.3),
          0px 4px 8px 3px rgba(0, 0, 0, 0.15);
      }

      &:hover .cover.placeholder {
        background-color: var(--color-surface-container-high);
        color: var(--color-on-surface-variant);
      }
    }
    &:active {
      /* background-color: color-mix(in srgb, var(--color-secondary-container), var(--color-on-secondary-container) 10%); */
      background-color: var(--color-secondary-container);
    }
    &:active .cover.placeholder {
      background-color: var(--color-surface-container-highest);
      color: var(--color-on-surface);
    }
    &::before {
      content: "";
      position: absolute;
      inset: 0;
      border-radius: inherit;
      z-index: 1;
      pointer-events: none;
      border: 1px solid var(--color-outline-variant);
    }
    &:focus-visible::after {
      content: "";
      position: absolute;
      inset: -2px;
      border-radius: inherit;
      outline: 3px solid var(--color-secondary);
      z-index: 1;

      animation-name: focus-grow, focus-shrink;
      animation-delay: 0ms, 150ms;
      animation-duration: 150ms, 450ms;
      animation-timing-function: cubic-bezier(0, 0.2, 0, 1);
    }
  }

  .cover {
    width: 100%;
    height: auto;
    aspect-ratio: 16 / 9;
    object-fit: cover;


    border-radius: 28px;
    &.placeholder {
      display: grid;
      place-items: center;
      place-content: center;

      background-color: var(--color-surface-container);
      color: color-mix(in srgb, var(--color-on-surface-variant) 38%, transparent);
      transition-property: background-color, color;
      transition-duration: 105ms;
      transition-timing-function: linear;
    }
  }
  .content {
    width: 100%;
    display: flex;
    flex-direction: column;
    justify-content: center;
    gap: 8px;
    padding: 24px 24px;
  }

  .date {
    font-family: var(--text-label-small-family);
    font-size: var(--text-label-small-size);
    font-weight: var(--text-label-small-weight);
    line-height: var(--text-label-small-line-height);
    letter-spacing: var(--text-label-small-letter-spacing);
    color: var(--color-on-surface-variant);
  }
  .title {
    font-family: var(--text-headline-small-family);
    font-size: var(--text-headline-small-size);
    font-weight: 500;
    line-height: var(--text-headline-small-line-height);
    letter-spacing: var(--text-headline-small-letter-spacing);
    color: var(--color-on-surface);
  }

  .description {
    font-family: var(--text-body-medium-family);
    font-size: var(--text-body-medium-size);
    font-weight: var(--text-body-medium-weight);
    line-height: var(--text-body-medium-line-height);
    letter-spacing: var(--text-body-medium-letter-spacing);
    color: var(--color-on-surface-variant);
  }

  .authors {
    display: flex;
    align-items: center;
    justify-content: flex-start;
    gap: 4px;
    padding-inline: 8px;
  }

  .by {
    font-family: var(--text-label-large-family);
    font-size: var(--text-label-large-size);
    font-weight: var(--text-label-large-weight);
    line-height: var(--text-label-large-line-height);
    letter-spacing: var(--text-label-large-letter-spacing);
    color: var(--color-on-surface-variant);
  }

  .author {
    -webkit-tap-highlight-color: transparent;
    width: fit-content;

    position: relative;

    display: flex;
    align-items: center;
    justify-content: center;
    gap: 8px;

    padding-block: 8px;
    padding-inline: 8px 16px;
    border-radius: 9999px;

    font-family: var(--text-label-large-family);
    font-size: var(--text-label-large-size);
    font-weight: var(--text-label-large-weight);
    line-height: var(--text-label-large-line-height);
    letter-spacing: var(--text-label-large-letter-spacing);
    text-decoration: none;
    font-variation-settings: "GRAD" 0;
    color: var(--color-on-surface-variant);

    transition-property: background-color, color;
    transition-duration: 105ms;
    transition-timing-function: var(--easing-standard);

    @media (hover: hover) {
      &:hover {
        background-color: color-mix(in srgb, transparent, var(--color-on-surface-variant) 8%);
        color: var(--color-primary);
        font-variation-settings: "GRAD" 50;
      }
    }
    &:active {
      background-color: color-mix(in srgb, transparent, var(--color-on-surface-variant) 10%);
      color: var(--color-primary);
      font-variation-settings: "GRAD" 150;
    }

    &:focus-visible::after {
      content: "";
      position: absolute;
      inset: -2px;
      border-radius: inherit;
      outline: 3px solid var(--color-secondary);
      z-index: 1;

      animation-name: focus-grow, focus-shrink;
      animation-delay: 0ms, 150ms;
      animation-duration: 150ms, 450ms;
      animation-timing-function: cubic-bezier(0, 0.2, 0, 1);
    }
  }

  .avatar {
    width: 24px;
    height: 24px;
    border-radius: 50%;
  }
</style>
